<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppNameDisplay" xml:space="preserve">
    <value>Device Center</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="ConnectAlertMessage" xml:space="preserve">
    <value>セットアップのためにデバイスに接続する必要があります。インターネット接続は一時的に切断されます。セットアップが完了すると、すぐに再接続されます。</value>
  </data>
  <data name="ConnectAlertTitle" xml:space="preserve">
    <value>続ける前に</value>
  </data>
  <data name="ConnectHelpMessage1" xml:space="preserve">
    <value>Wi-Fi で接続する</value>
  </data>
  <data name="ConnectHelpMessage2" xml:space="preserve">
    <value>イーサネット ケーブルで接続する</value>
  </data>
  <data name="ConnectHelpMessage3" xml:space="preserve">
    <value>後で接続する</value>
  </data>
  <data name="ConnectHelpSubTitle" xml:space="preserve">
    <value>ヘルプを表示する</value>
  </data>
  <data name="ConnectMessage1" xml:space="preserve">
    <value>最初に、準備の完了した SD カードをデバイスに挿入します。</value>
  </data>
  <data name="ConnectMessage2" xml:space="preserve">
    <value>次に、Wi-Fi またはイーサネットを使ってボードをネットワークに接続します。</value>
  </data>
  <data name="ConnectTitle" xml:space="preserve">
    <value>SD カードは準備が完了しています。</value>
  </data>
  <data name="ConnetSubTitle" xml:space="preserve">
    <value>接続を開始してください</value>
  </data>
  <data name="ContinueButton" xml:space="preserve">
    <value>続ける</value>
  </data>
  <data name="DeviceListCantFindDevice" xml:space="preserve">
    <value>デバイスが見つからない場合</value>
  </data>
  <data name="DeviceListEnterNetworkInfo" xml:space="preserve">
    <value>ネットワーク情報を入力する</value>
  </data>
  <data name="DeviceListManage" xml:space="preserve">
    <value>Windows Device Portal で管理する</value>
  </data>
  <data name="DeviceListScanAgain" xml:space="preserve">
    <value>もう一度スキャンする</value>
  </data>
  <data name="DeviceListTroubleshoot" xml:space="preserve">
    <value>デバイスの接続のトラブルシューティングを実行する</value>
  </data>
  <data name="DeviceNamePwdDeviceNameLabel" xml:space="preserve">
    <value>デバイス名</value>
  </data>
  <data name="DeviceNamePwdMessage" xml:space="preserve">
    <value>デバイス名とパスワードを設定することで、デバイスのセキュリティが向上します</value>
  </data>
  <data name="DeviceNamePwdPassword1" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="DeviceNamePwdPassword2" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="DeviceNamePwdPasswordDontMatch" xml:space="preserve">
    <value>パスワードが一致しません</value>
  </data>
  <data name="DeviceNamePwdPasswordMatch" xml:space="preserve">
    <value>パスワードが一致しました</value>
  </data>
  <data name="DeviceNamePwdSubtitle" xml:space="preserve">
    <value>デバイス名とパスワードを設定します</value>
  </data>
  <data name="DeviceNamePwdUserNameLabel" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="FindDeviceMessage" xml:space="preserve">
    <value>ネットワークで Windows 10 IoT Core デバイスを検索します</value>
  </data>
  <data name="FindMyDeviceButton" xml:space="preserve">
    <value>自分のデバイスを検索する</value>
  </data>
  <data name="FinishButton" xml:space="preserve">
    <value>完了</value>
  </data>
  <data name="FoundDeviceEnterNetworkInfo" xml:space="preserve">
    <value>ネットワーク情報を入力してください</value>
  </data>
  <data name="FoundDeviceMessage" xml:space="preserve">
    <value>ネットワークに 1 台のワイヤレス デバイスが見つかりました</value>
  </data>
  <data name="FoundDevicesMessage" xml:space="preserve">
    <value>ネットワークに {0} 台のワイヤレス デバイスが見つかりました</value>
    <comment>code will fill in the {0}</comment>
  </data>
  <data name="IntroMessage" xml:space="preserve">
    <value>ネットワークに接続されている Windows IoT Core デバイスをお持ちですか?</value>
  </data>
  <data name="IntroSetUpNewDevice" xml:space="preserve">
    <value>新しいデバイスのセットアップ</value>
  </data>
  <data name="IntroSubTitle" xml:space="preserve">
    <value>Windows 10 IoT Core を実行しているさまざまなデバイスで、迅速に Windows IoT ソリューションのプロトタイプを作成し、ソリューションを構築します。Windows 10 は、ソリューションをすばやく開発してデバイスに展開するための強力なツールとなります。</value>
  </data>
  <data name="IntroTitle" xml:space="preserve">
    <value>モノのインターネットを検出します</value>
  </data>
  <data name="NetworkCredentialsNetworkNameLabel" xml:space="preserve">
    <value>ワイヤレス ネットワーク名</value>
  </data>
  <data name="NetworkCredentialsPasswordLabel" xml:space="preserve">
    <value>ワイヤレス パスワード</value>
  </data>
  <data name="NetworkCredentialsSubTitle" xml:space="preserve">
    <value>ネットワーク資格情報</value>
  </data>
  <data name="NewDeviceAcceptLabel" xml:space="preserve">
    <value> </value>
    <comment>note to loc: "I accept the" + "terms and conditions" are part of the same sentence</comment>
  </data>
  <data name="NewDeviceAlertMessage" xml:space="preserve">
    <value>続行する前に、カードに格納されているすべてのファイルをバックアップしておいてください。フラッシングを実行すると、以前にカードに格納した内容がすべて削除されます。</value>
  </data>
  <data name="NewDeviceAlertTitle" xml:space="preserve">
    <value>続ける前に</value>
  </data>
  <data name="NewDeviceDownloadAndInstall" xml:space="preserve">
    <value>ダウンロードとインストール</value>
  </data>
  <data name="NewDeviceDownloading" xml:space="preserve">
    <value>Windows 10 IoT Core をダウンロードしています</value>
  </data>
  <data name="NewDeviceDriveLabel" xml:space="preserve">
    <value>ドライブ</value>
  </data>
  <data name="NewDeviceFlashing" xml:space="preserve">
    <value>SD カードをフラッシングしています</value>
  </data>
  <data name="NewDeviceInsertSDCardMessage" xml:space="preserve">
    <value>コンピューターに SD カードを挿入します。これによって、カードの内容がすべて消去されます。</value>
  </data>
  <data name="NewDeviceSelectDeviceTypeLabel" xml:space="preserve">
    <value>デバイスの種類を選択します</value>
    <comment>the combo values should come from the online xml file</comment>
  </data>
  <data name="NewDeviceSubTitle" xml:space="preserve">
    <value>最初に、デバイスに Windows 10 IoT Core をインストールします。</value>
  </data>
  <data name="NewDeviceTermsAndCondition" xml:space="preserve">
    <value>使用条件</value>
    <comment>this will be the label for an hyperlink pointing to the EULA on our websites</comment>
  </data>
  <data name="NewDeviceTitle" xml:space="preserve">
    <value>新しいデバイスのセットアップ</value>
  </data>
  <data name="OkButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SuccessAction1" xml:space="preserve">
    <value>ブラウザーで Windows Device Portal を開く</value>
  </data>
  <data name="SuccessAction2" xml:space="preserve">
    <value>ツールを入手する</value>
  </data>
  <data name="SuccessAction3" xml:space="preserve">
    <value>プロジェクトおよびチュートリアルについて調べる</value>
  </data>
  <data name="SuccessMessage1" xml:space="preserve">
    <value>Windows Device Portal でデバイスを構成する</value>
  </data>
  <data name="SuccessMessage2" xml:space="preserve">
    <value>PC をセットアップする</value>
  </data>
  <data name="SuccessMessage3" xml:space="preserve">
    <value>最初の Windows アプリを作成する</value>
  </data>
  <data name="SuccessSubTitle" xml:space="preserve">
    <value>開発を開始する準備が完了しました。</value>
  </data>
  <data name="SuccessTitle" xml:space="preserve">
    <value>成功しました。{0} はオンラインです。</value>
    <comment>{0} is the device name</comment>
  </data>
</root>